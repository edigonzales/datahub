logging.level.org.springframework=${LOG_LEVEL_SPRING:INFO} 
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security.web.FilterChainProxy=TRACE
#logging.level.org.springframework.jdbc.core.JdbcTemplate=${LOG_LEVEL_DB_CONNECTION:DEBUG}
logging.level.com.zaxxer.hikari=${LOG_LEVEL_DB_CONNECTION_POOL:DEBUG}
logging.level.org.apache.cayenne.log.JdbcEventLogger=${LOG_LEVEL_CAYENNE:INFO}
logging.level.ch.so.agi.datahub=${LOG_LEVEL_APP:DEBUG} 

server.tomcat.threads.max=${TOMCAT_THREADS_MAX:5}
server.tomcat.accept-count=${TOMCAT_ACCEPT_COUNT:50}
server.tomcat.max-connections=${TOMCAT_MAX_CONNECTIONS:200}

spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:200}MB
spring.servlet.multipart.max-request-size=${MAX_FILE_SIZE:200}MB

# Damit kein automatisches Passwort erstellt wird und
# in die Konsole geloggt wird.
# Sind aber völlig irrelevant, da UserDetails(Service)
# nicht verwendet wird mit ldap.
# -> https://docs.spring.io/spring-security/reference/servlet/authentication/passwords/ldap.html
spring.security.user.name=foo
spring.security.user.password=bar
#spring.ldap.base=dc=springframework,dc=org
spring.ldap.urls=ldap://localhost:8389
#spring.ldap.embedded.base-dn=dc=springframework,dc=org
spring.ldap.embedded.port=8389
spring.ldap.embedded.ldif=classpath:test-server.ldif
spring.ldap.embedded.credential.username=cn=admin,dc=springframework,dc=org
spring.ldap.embedded.credential.password=secret

spring.datasource.url=${DBURL:jdbc:postgresql://localhost:54321/edit}
spring.datasource.name=datahub
spring.datasource.username=${DBUSR:postgres}
spring.datasource.password=${DBPWD:secret}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:5}

org.jobrunr.background-job-server.enabled=${JOBRUNR_SERVER_ENABLED:true}
org.jobrunr.background-job-server.worker-count=${JOBRUNR_WORKER_COUNT:1} 
org.jobrunr.background-job-server.poll-interval-in-seconds=${JOBRUNR_POLL_INTERVAL:10}
org.jobrunr.dashboard.enabled=${JOBRUNR_DASHBOARD_ENABLED:true}
org.jobrunr.dashboard.username=${JOBRUNR_DASHBOARD_USER:admin}
org.jobrunr.dashboard.password=${JOBRUNR_DASHBOARD_PWD:admin}
# Schema must exist! if not: "error creating bean..."
org.jobrunr.database.tablePrefix=${JOBRUNR_DB_SCHEMA:agi_datahub_jobrunr_v1.} 

app.dbSchema=${DB_SCHEMA:agi_datahub_v2}
app.apiKeyHeaderName=${API_KEY_HEADER_NAME:X-API-KEY}
app.adminAccountInit=${ADMIN_ACCOUNT_INIT:true}
app.adminAccountName=${ADMIN_ACCOUNT_NAME:AGI SO}
app.workDirectory=${WORK_DIRECTORY:/Users/stefan/tmp/}
app.folderPrefix=${FOLDER_PREFIX:datahub_}
app.targetDirectory=${TARGET_DIRECTORY:/Users/stefan/tmp/datahub_target/}
app.preferredIliRepo=${PREFERRED_ILI_REPO:https://geo.so.ch/models}
spring.mail.host=${MAIL_HOST:smtp.elasticemail.com}
spring.mail.port=${MAIL_PORT:2525}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
